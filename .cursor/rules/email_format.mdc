# 📬 Output Format Specification: Weather Reports (InReach, max. 160 characters)

This specification defines the exact structure of weather reports in three operation modes: **Morning Report (e.g., 04:30)**, **Evening Report (e.g., 19:00)**, and **Update Report (dynamic on risk changes)**.

## Technical Requirements

- **Maximum length:** 160 characters
- **Character set:** ASCII only (no emojis, links, special characters)
- **Time format:** Local time (CEST), hours only (HH)
- **Data source:** meteofrance-api, fallback: open-meteo
- **Thresholds:** From `config.yaml`
- **Stages:** Determined via `etappen.json` based on date
- **Delivery:** Managed via crontab, not part of program code
- **Unified generation:** Single codebase for all report types and output formats (E-Mail, SMS)

### Email Subject Format
```
{subject} {etappe}: {risk_level} - {highest_risk} ({report_type})
```

**Components:**
- `{subject}`: Base subject from `config.yaml`
- `{etappe}`: Current stage name (e.g., "Vizzavona", "Conca")
- `{risk_level}`: Vigilance warning level (e.g., "WARN", "HIGH", "MAX") - empty if no warnings
- `{highest_risk}`: Vigilance warning phenomenon (e.g., "Gewitter", "Waldbrand") - empty if no warnings
- `{report_type}`: Report type (e.g., "morning", "evening", "update")

**Examples:**
- `GR20 Wetter Vizzavona: HIGH - Gewitter (morning)`
- `GR20 Wetter Conca: MAX - Waldbrand (evening)`
- `GR20 Wetter Corte:  (update)` (no vigilance warnings)

---

## 🕓 Morning Report (e.g., 04:30)

### Content
- **Valid for:** Current day
- **Time period:** 05:00–17:00 CEST
- **Geopoints:** All points of today's stage
- **Aggregation:** Maximum values over time and geopoints

### Format
```
{etappe_heute} | Gew.{g_threshold}%@{t_g_threshold}({g_pmax}%@{t_g_pmax}) | Regen{r_threshold}%@{t_r_threshold}({r_pmax}%@{t_r_pmax}) | Regen{regen_mm}mm@{t_regen_max} | Hitze{temp_max}°C | Wind{wind} | Böen{wind_max} | Gew.+1{g1_next}%@{t_g1_next_threshold} | {fire_risk_warning}
```

### Example
```
Waldpass | Gew.30%@13(80%@15) | Regen55%@15(70%@16) | Regen2.0mm@15 | Hitze28°C | Wind15 | Böen25 | Gew.+180%@14 | WARN Waldbrand
```

### Placeholders
- `{etappe_heute}`: Name of today's stage (max. 10 characters)
- `{g_threshold}`: Thunderstorm probability at first threshold crossing
- `{t_g_threshold}`: Time of first thunderstorm threshold crossing
- `{g_pmax}`: Maximum thunderstorm probability of the day
- `{t_g_pmax}`: Time of maximum thunderstorm probability
- `{r_threshold}`: Rain probability at first threshold crossing
- `{t_r_threshold}`: Time of first rain threshold crossing
- `{r_pmax}`: Maximum rain probability of the day
- `{t_r_pmax}`: Time of maximum rain probability
- `{regen_mm}`: Daily maximum rain sum
- `{t_regen_max}`: Time of maximum rain amount
- `{temp_max}`: Daily maximum temperature
- `{wind}`: Average wind speed
- `{wind_max}`: Maximum wind gusts
- `{g1_next}`: Thunderstorm probability for tomorrow
- `{t_g1_next_threshold}`: Time of first threshold crossing tomorrow
- `{fire_risk_warning}`: Fire risk warning (e.g., "WARN Waldbrand", "HIGH Waldbrand") or empty if no warning

---

## 🌙 Evening Report (19:00)

### Content
- **Valid for:** Tomorrow and day after tomorrow
- **Time period:** 05:00–17:00 CEST (each day)
- **Geopoints:** 
  - `{min_temp}`: Last geopoint of today's stage, 22:00–05:00
  - All other values: All points of tomorrow's stage, 05:00–17:00
- **Aggregation:** Maximum values over time and geopoints

### Format
```
{etappe_morgen} | Nacht{min_temp}°C | Gew.{g_threshold}%@{t_g_threshold}({g_pmax}%@{t_g_pmax}) | Regen{r_threshold}%@{t_r_threshold}({r_pmax}%@{t_r_pmax}) | Regen{regen_mm}mm@{t_regen_max} | Hitze{temp_max}°C | Wind{wind} | Böen{wind_max} | Gew.+1{g1_next}%@{t_g1_next_threshold} | {fire_risk_warning}
```

### Example
```
Waldpass | Nacht16°C | Gew.40%@14(95%@17) | Regen50%@14(70%@17) | Regen2.0mm@14 | Hitze34°C | Wind18 | Böen38 | Gew.+190%@15 | WARN Waldbrand
```

### Additional Placeholders
- `{etappe_morgen}`: Name of tomorrow's stage
- `{etappe_uebermorgen}`: Name of day after tomorrow's stage
- `{min_temp}`: Night temperature (minimum from tomorrow's stage start point, 22:00–05:00)

**Note:** `{g1_next}` refers to the day after tomorrow's stage and day.

---

## 🚨 Update Report

### Trigger
Only triggered by significant changes in the risk situation for the current day (e.g., new threshold exceeded by percentage specified in config.yaml). Reports only the strongly changed values. Maximum 3 update reports per day.

### Format
```
{etappe_heute} | Update: | Gew.{g_threshold}%@{t_g_threshold}({g_pmax}%@{t_g_pmax}) | Regen{r_threshold}%@{t_r_threshold}({r_pmax}%@{t_r_pmax}) | Regen{regen_mm}mm@{t_regen_max} | Hitze{temp_max}°C | Wind{wind} | Böen{wind_max} | Gew.+1{g1_next}%@{t_g1_next_threshold} | {fire_risk_warning}
```

### Example
```
Almhütte | Update: | Gew.35%@15(85%@16) | Regen55%@16(75%@17) | Regen2.0mm@15 | Hitze29°C | Wind12 | Böen31 | Gew.+185%@14 | WARN Waldbrand
```

---

## 📝 Formatting Rules

### Null Values
- **Thunderstorm:** `Gew. -` (without % and @)
- **Rain:** `Regen -` (without % and @)
- **Rain amount:** `Regen -mm` (without @)

### Abbreviations
- **Thunderstorm** → **Gew.**
- **Rain** → **Regen** (distinguished by "%" vs "mm")
- **Wind gusts** → **Böen** (without km/h)
- **Stage names** → Abbreviated to max. 10 characters (single stage name only)

### Formatting
- Spaces between all `|` separators
- Time format: Hours only (HH), no minutes
- Threshold@Time (max. Maximum@Time) for all values
- Example: "Gew.30%@13(80%@15)"
- Temperature: No decimal places (e.g., "Hitze28°C" not "Hitze28.0°C")
- Wind: No km/h suffix (e.g., "Wind15" not "Wind15km/h")
- Wind gusts: "Böen25" not "Windböen25km/h"

### Thresholds (from config.yaml)
- Rain probability: 25% (`thresholds.regen_probability`)
- Thunderstorm probability: 20% (`thresholds.thunderstorm_probability`)
- Rain amount: 2.0mm (`thresholds.regen_amount`)
- Wind speed: 20 km/h (`thresholds.wind_speed`)
- Temperature: 32°C (`thresholds.temperature`)

### Vigilance Warnings
- Completely omitted if no warnings exist
- **Use existing German translation table** from `src/notification/email_client.py`:
  - `thunderstorm` → `Gewitter`
  - `rain` → `Regen`
  - `wind` → `Wind`
  - `snow` → `Schnee`
  - `flood` → `Hochwasser`
  - `forest_fire` → `Waldbrand`
  - `heat` → `Hitze`
  - `cold` → `Kälte`
  - `avalanche` → `Lawine`
  - `unknown` → `Warnung`
- Format: `{LEVEL} {GERMAN_PHENOMENON}` (e.g., "HIGH Gewitter", "MAX Waldbrand")
- Only include warnings with level yellow (2) or higher
- Multiple alerts: Show highest level only

---

## 🔧 Implementation Requirements

### Unified Code Generation
- **Single codebase** for all three report types
- **Single codebase** for all output formats (E-Mail, SMS)
- **Maximum code reuse** between report types
- **Consistent null value handling** across all reports
- **Unified time formatting** (HH only)
- **Centralized threshold management** from config.yaml

### Data Aggregation Strategy
1. **Collect data** for all relevant geopoints and time periods
2. **Apply thresholds** to determine crossing times
3. **Find maxima** for each weather parameter
4. **Format consistently** according to report type
5. **Handle null values** uniformly
6. **Validate character count** (max 160)

### Error Handling
- **Graceful degradation** if data unavailable
- **Consistent fallback** to open-meteo when meteofrance-api fails
- **Clear indication** when thresholds cannot be determined
- **Robust null value detection** and formatting

---

## 📊 Character Count Examples

### Morning Report
```
Waldpass | Gew.30%@13(80%@15) | Regen55%@15(70%@16) | Regen2.0mm@15 | Hitze28°C | Wind15 | Böen25 | Gew.+180%@14 | WARN Waldbrand
```
**Length:** 118 characters

### Evening Report
```
Waldpass | Nacht16°C | Gew.40%@14(95%@17) | Regen50%@14(70%@17) | Regen2.0mm@14 | Hitze34°C | Wind18 | Böen38 | Gew.+190%@15 | WARN Waldbrand
```
**Length:** 128 characters

### Update Report
```
Almhütte | Update: | Gew.35%@15(85%@16) | Regen55%@16(75%@17) | Regen2.0mm@15 | Hitze29°C | Wind12 | Böen31 | Gew.+185%@14 | WARN Waldbrand
```
**Length:** 123 characters 